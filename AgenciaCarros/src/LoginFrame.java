
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class LoginFrame extends javax.swing.JFrame {
    private String usuario,
                   contrasena;
    private final String adminMasterUsername = "harnex",
                         adminMasterPassword = "pitayo";
    
    private ListaEmpleados listaEmpleados;
    
    private ImageIcon adminLogo = new ImageIcon("isc.png");
    private ImageIcon nullLogo = new ImageIcon("Null.png");
    
    public LoginFrame() {
        super("Login");
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        //Settear logo, predeterminado o de la empresa
        //Verifica si existe algun logo almacenado (falta implementar)
        if(true) {
            logoL.setIcon(nullLogo);
            //Sino, setea uno estandar
        } else {
            logoL.setIcon(nullLogo);
        }
        this.usuario = this.contrasena = "";
        this.revisarBD();
    }
    
    //Verifica si ya se cuenta con archivos consistentes, esten vacios o no
    private void revisarBD() {
        //Archivo Empleados
        try {
            this.listaEmpleados = DataLoader.loadEmployees(new File("EmployeeDatabase.bin"));
        } catch(NullPointerException e) {
            System.out.println("No se encontro archivo con empleados. Se creará uno vacio");
            System.out.println();
            System.out.println("---------------------------------------------------------");
            DataLoader.createEmptyEmployeesFile();
        }
        
        //Archivo Inventario
        try {
            Inventario inventario = DataLoader.loadInventory(new File("CarDatabase.bin"));
        } catch(NullPointerException e) {
            System.out.println("No se encontro archivo con carros. Se creará uno vacio");
            System.out.println();
            System.out.println("---------------------------------------------------------");
            DataLoader.createEmptyInventoryFile();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contrasenaTF = new javax.swing.JPasswordField();
        accederB = new javax.swing.JButton();
        logoL = new javax.swing.JLabel();
        matriculaTF = new javax.swing.JTextField();
        matriculaL = new javax.swing.JLabel();
        contrasenaL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(500, 550));
        setMinimumSize(new java.awt.Dimension(500, 550));
        setPreferredSize(new java.awt.Dimension(500, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 550));

        accederB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accederB.setText("Acceder");
        accederB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accederBActionPerformed(evt);
            }
        });

        logoL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoL.setText("Logo");

        matriculaL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        matriculaL.setText("Matrícula");

        contrasenaL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        contrasenaL.setText("Contraseña");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(matriculaL))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(matriculaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(contrasenaL))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(contrasenaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(accederB, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(logoL, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(logoL, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(matriculaL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriculaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(contrasenaL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contrasenaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(accederB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Función de botón "Acceder"
    private void accederBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accederBActionPerformed
        //Leer datos de entrada de usuario y contraseña
        try {
            this.usuario = matriculaTF.getText();
            this.contrasena = String.valueOf(contrasenaTF.getPassword()); 
        } catch(NullPointerException e) {
            //Si no se pueden leer los campos
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese su usuario y contraseña");
        }
        System.out.println("Usuario ingresado: " + this.usuario);
        System.out.println("Contraseña ingresada: " + this.contrasena);
        //Falta poner la verificacion para la base de datos
        
        //Si los campos estan vacios
        if(this.usuario.equals("") || this.contrasena.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese su usuario y / o contraseña");
        //Si ambas entradas son correctas
        } else if((this.usuario.equals(adminMasterUsername) && this.contrasena.equals(adminMasterPassword)) ||
                (this.listaEmpleados.contains(this.usuario) && this.contrasena.equals(this.listaEmpleados.obtener(this.usuario).getContrasena()))) {
            System.out.println("-------------------------------------------------");
            System.out.println();
            System.out.println("Bienvenid@, " + this.usuario);
            
            MainFrame mf = new MainFrame(usuario);
            mf.setVisible(true);
            this.dispose();
        //Si el usuario es incorrecto
        } else if (!this.listaEmpleados.contains(this.usuario)) {
            JOptionPane.showMessageDialog(rootPane, "El usuario ingresado no existe en la base de datos");
        //Si solo el usuario es correcto
        } else if ((this.listaEmpleados.contains(this.usuario) && !this.contrasena.equals(this.listaEmpleados.obtener(this.usuario).getContrasena()))) {
            JOptionPane.showMessageDialog(rootPane, "Contraseña inválida para el usuario ingresado");
        }
    }//GEN-LAST:event_accederBActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accederB;
    private javax.swing.JLabel contrasenaL;
    private javax.swing.JPasswordField contrasenaTF;
    private javax.swing.JLabel logoL;
    private javax.swing.JLabel matriculaL;
    private javax.swing.JTextField matriculaTF;
    // End of variables declaration//GEN-END:variables
}
